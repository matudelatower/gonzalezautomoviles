<?php

namespace VehiculosBundle\Entity;

/**
 * VehiculoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VehiculoRepository extends \Doctrine\ORM\EntityRepository {

    public function getVehiculosEstado($estado, $filters = null) {
        $ids = array();
        if ($estado) {
            foreach ($estado as $item) {
                $ids[] = $item->getId();
            }
            $idsEstado = implode(',', $ids);
            $where = "tipo_estado_vehiculo.id in ($idsEstado)";
        } else {
            $where = "0=0";
        }


        $db = $this->getEntityManager()->getConnection();


        if ($filters['vin']) {

            $where.=" AND upper(v.vin) LIKE upper('%" . $filters['vin'] . "%')";
        }
        if ($filters['colorVehiculo']) {
            $where.=" AND v.color_vehiculo_id=" . $filters['colorVehiculo']->getId();
        }
        if ($filters['tipoVentaEspecial']) {
            $where.=" AND v.tipo_venta_especial_id=" . $filters['tipoVentaEspecial']->getId();
        }
        if ($filters['deposito']) {
            $where.=" AND d.id=" . $filters['deposito']->getId();
        }
        if ($filters['modelo']) {
            $where.=" AND nm.id=" . $filters['modelo']->getId();
        }                
         if ($filters['cliente']) {
            $where.=" AND v.cliente_id=" . $filters['cliente']->getId();
        }  

        $query = "SELECT   distinct(v.*),
                                        cm.codigo as modelo_codigo,cm.anio as modelo_anio,nm.nombre as modelo_nombre,cm.version as modelo_version,
                                        tipo_estado_vehiculo.estado as vehiculo_estado,tipo_estado_vehiculo.slug as vehiculo_estado_slug,remitos.fecha as remito_fecha,
                                        remitos.numero as remito_numero,v.numero_pedido,tv.nombre as tipo_venta_especial,tv.slug as venta_especial_slug,d.nombre as deposito_actual,
                                        ch_ci.id as check_control_interno_resultado_cabecera_id,ch_ci.firmado,cv.color as color_vehiculo,
                                        pat.dominio,current_date-fecha_emision_documento::date as dias_en_stock,age.fecha as fecha_entrega
					FROM     estados_vehiculos
					INNER JOIN (SELECT max(id) as lastId, vehiculo_id from estados_vehiculos group by vehiculo_id) eevv on estados_vehiculos.id =  eevv.lastId
					INNER JOIN vehiculos v ON estados_vehiculos.vehiculo_id = v.id
					INNER JOIN tipo_estado_vehiculo  ON estados_vehiculos.tipo_estado_vehiculo_id = tipo_estado_vehiculo.id
                                        INNER JOIN colores_vehiculos cv ON v.color_vehiculo_id=cv.id
                                        LEFT JOIN codigos_modelo cm ON v.codigo_modelo_id=cm.id
                                        LEFT JOIN nombres_modelo nm ON cm.nombre_modelo_id=nm.id
                                        LEFT JOIN remitos ON v.remito_id=remitos.id
                                        LEFT JOIN tipos_venta_especial tv ON v.tipo_venta_especial_id=tv.id
                                        
                                        LEFT JOIN (SELECT max(id) as lastIdMd, vehiculo_id from movimientos_depositos group by vehiculo_id) mmdd on v.id =  mmdd.vehiculo_id
                                        LEFT JOIN  movimientos_depositos md ON  mmdd.lastIdMd=md.id
                                        LEFT JOIN depositos d ON md.deposito_destino_id=d.id
                                        LEFT JOIN check_control_interno_resultado_cabeceras ch_ci ON v.check_control_interno_resultado_cabecera_id=ch_ci.id
                                        LEFT JOIN patentamientos pat ON v.patentamiento_id=pat.id
                                        LEFT JOIN agenda_entregas age ON v.id=age.vehiculo_id
                                        WHERE " . $where .
                                        " ORDER BY modelo_nombre asc,modelo_anio asc,color_vehiculo asc";

        $stmt = $db->prepare($query);
        $stmt->execute();

        return $stmt->fetchAll();
    }

}
